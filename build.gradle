buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'

	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

ext {
	queryDslVersion = '3.6.3'
	javaGeneratedSources = file("$buildDir/generated-sources/java")
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

group = 'com.apress.spring'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
	mavenCentral()
}


sourceSets {
	generated
}

sourceSets.generated.java.srcDirs = ['src/main/generated']

configurations {
	querydslapt
}

idea {
	module {
		sourceDirs += file('generated/')
	}
}

compileJava {
	doFirst {
		javaGeneratedSources.mkdirs()
	}
	options.compilerArgs += [
			'-parameters', '-s', javaGeneratedSources
	]
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
	compile group: 'org.springframework.data', name: 'spring-data-rest-hal-browser', version: '2.4.0.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '1.4.0.RELEASE'
	//compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
	compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.0'
//	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'


	compile('org.yaml:snakeyaml')

	compile group: 'com.mysema.querydsl', name: 'querydsl-apt', version: '2.7.1'

	compile group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: '5.2.10.Final'
	/*compile "com.mysema.querydsl:querydsl-jpa:$queryDslVersion"
	compileOnly "com.mysema.querydsl:querydsl-apt:$queryDslVersion:jpa"
	compileOnly 'org.projectlombok:lombok:1.16.8'


	compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'


	compile 'org.hibernate:hibernate-jpamodelgen:1.2.0.Final'
*/


}





task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
	source = sourceSets.main.java
	classpath = configurations.compile + configurations.querydslapt
	options.compilerArgs = [
			"-proc:only",
			"-processor", "org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor"
	]
	destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava.dependsOn generateQueryDSL

idea {
	module {
		sourceDirs += file('src/main/generated')
	}
}

jar {
	manifest {
		attributes(
				"Created-By"      : "Iuliana Cosmina",
				"Specification-Title": "Pro Spring 5",
				'Main-Class': 'com.apress.prospring5.ch8.SpringJPADemo',
				"Class-Path": configurations.compile.collect { it.getName() }.join(' '))
	}
}
